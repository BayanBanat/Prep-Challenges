{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "## Hacker Rank\n\nFor Thursdays you will be solving some selected challenges on HackerRank, please create an account if you don't have then\nFollow the links below:\nread them carefully and solve them then copy-paste your solution below in Code Block"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Required**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Append And Delete](https://www.hackerrank.com/challenges/append-and-delete/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "function appendAndDelete(s, t, k) {\n    // Write your code here\n  let sLen = s.length;\n  let tLen = t.length;\n  let commonLen = 0;\n  while (commonLen < sLen && commonLen < tLen && s[commonLen] == t[commonLen]) {\n    commonLen++;\n  }\n  let totalOps = sLen + tLen - 2 * commonLen;\n  if (totalOps <= k && (totalOps - k) % 2 == 0 || k >= sLen + tLen) {\n    return \"Yes\";\n  } else {\n    return \"No\";\n  }\n}"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Optional**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Encryption](https://www.hackerrank.com/challenges/encryption/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "function encryption(s) {\n    // Write your code here\n const cleaningString = s.replace(/[^a-zA-Z]/g, \"\");\n  const length = cleaningString.length;\n  const sqrtLength = Math.sqrt(length);\n  const rows = Math.floor(sqrtLength);\n  const columns = Math.ceil(sqrtLength);\n\n  let result = \"\";\n  for (let i = 0; i < columns; i++) {\n    for (let j = 0; j < rows + 1; j++) {\n      const index = j * columns + i;\n      if (index < length) {\n        result += cleaningString.charAt(index);\n      }\n    }\n    result += \" \";\n  }\n\n  return result.trim();\n\n}"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [The Time In Words](https://www.hackerrank.com/challenges/the-time-in-words/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "function timeInWords(h, m) {\n    // Write your code here\nlet times = [\n    \"\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\",\n    \"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"quarter\", \"sixteen\",\n    \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\"\n  ];\n\n  let hour = times[h];\n  let nextHour = times[h % 12 + 1];\n  let minute = \"\";\n  let direction = \"\";\n\n  if (m == 0) {\n    return `${hour} o' clock`;\n  } else if (m == 15 || m == 30) {\n    minute = times[m];\n    return `${minute} ${m == 15 ? 'past' : 'half'} ${hour}`;\n  } else if (m < 30) {\n    if (m == 1) {\n      minute = \"one minute\";\n    } else if (m <= 20) {\n      minute = `${times[m]} minutes`;\n    } else {\n      minute = `twenty ${times[m - 20]} minutes`;\n    }\n    direction = \"past\";\n  } else {\n    if (60 - m == 1) {\n      minute = \"one minute\";\n    } else if (60 - m <= 20) {\n      minute = `${times[60 - m]} minutes`;\n    } else {\n      minute = `twenty ${times[(60 - m) - 20]} minutes`;\n    }\n    direction = \"to\";\n  }\n\n  return `${minute} ${direction} ${nextHour}`;\n}"
            ],
            "outputs": []
        }
    ]
}